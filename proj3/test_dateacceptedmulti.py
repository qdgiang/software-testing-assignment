# Generated by Selenium IDE
import csv
import pytest
import time
from selenium import webdriver
from selenium.webdriver.common.by import By

month_mapping = {
      1: "January",
      2: "February",
      3: "March",
      4: "April",
      5: "May",
      6: "June",
      7: "July",
      8: "August",
      9: "September",
      10: "October",
      11: "November",
      12: "December"
    }

class TestDateaccepted():
  def setup_method(self):
    self.driver = webdriver.Firefox()
    self.vars = {}
    self.driver.get("http://localhost/moodle/")
    self.driver.set_window_size(550, 694)
    self.driver.implicitly_wait(20)
    self.driver.find_element(By.LINK_TEXT, "Log in").click()
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys("admin")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("12345678aA!")
    self.driver.find_element(By.ID, "loginbtn").click()
  
  def teardown_method(self):
    self.driver.quit()

  def test_dateacceptedmulti(self):
    number_of_tests = 0
    with open("./invalid_dates.csv", "r") as csvfile:
      reader = csv.DictReader(csvfile)
      for row in reader:
        day = int(row["Day"])
        month = int(row["Month"])
        one_res = self._test_onedateaccepted(day, month)
        if one_res:
          number_of_tests += 1
    print(f"Number of tests passed: {number_of_tests}")

  def _test_onedateaccepted(self, day: int, month: int):
    self.driver.get("http://localhost/moodle/course/edit.php?id=3&returnto=catmanage")
    self.driver.set_window_size(622, 732)
    self.driver.find_element(By.ID, "id_startdate_day").click()
    dropdown = self.driver.find_element(By.ID, "id_startdate_day")
    dropdown.find_element(By.XPATH, f"//option[. = '{day}']").click()
    self.driver.find_element(By.CSS_SELECTOR, f"#id_startdate_day > option:nth-child({day})").click()
    self.driver.find_element(By.ID, "id_startdate_month").click()
    dropdown = self.driver.find_element(By.ID, "id_startdate_month")
    dropdown.find_element(By.XPATH, f"//option[. = '{month_mapping.get(month)}']").click()
    self.driver.find_element(By.CSS_SELECTOR, f"#id_startdate_month > option:nth-child({month})").click()
    final_day = self.driver.find_element(By.ID, "id_startdate_day").get_attribute("value")
    print(f"Day before being corrected: {day}")
    print(f"Day after being corrected: {final_day}")
    assert int(final_day) != day
    self.driver.find_element(By.ID, "id_saveanddisplay").click()
    assert self.driver.title == "Course: French 1 | Moo3"
    if self.driver.title == "Course: French 1 | Moo3":
      return True
    return False
  
if __name__ == '__main__':
  a = TestDateaccepted()
  a.setup_method()
  a.test_dateacceptedmulti()
  #a.quick_test_dateaccepted1()
  a.teardown_method()